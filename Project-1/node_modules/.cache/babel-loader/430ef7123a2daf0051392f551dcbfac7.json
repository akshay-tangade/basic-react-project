{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\my-app\\\\basic-react-project\\\\src\\\\components\\\\Chart\\\\Charts.js\";\nimport React from 'react';\nimport ChartBar from './ChartBar';\nimport './Charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charts = props => {\n  const dataPointsValue = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalValue = Math.max(...dataPointsValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.maps(datapoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: datapoint.value,\n      maxValue: totalValue,\n      label: datapoint.label\n    }, datapoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["D:/Learning/React/my-app/basic-react-project/src/components/Chart/Charts.js"],"names":["React","ChartBar","Charts","props","dataPointsValue","dataPoints","map","dataPoint","value","totalValue","Math","max","maps","datapoint","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAxB;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAAnB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKD,KAAK,CAACE,UAAN,CAAiBO,IAAjB,CACIC,SAAD,iBAAgB,QAAC,QAAD;AAEZ,MAAA,KAAK,EAAEA,SAAS,CAACL,KAFL;AAGZ,MAAA,QAAQ,EAAEC,UAHE;AAIZ,MAAA,KAAK,EAAEI,SAAS,CAACC;AAJL,OACPD,SAAS,CAACC,KADH;AAAA;AAAA;AAAA;AAAA,YADnB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAjBD;;KAAMZ,M;AAmBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Charts.css';\r\n\r\nconst Charts = (props) => {\r\n    const dataPointsValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalValue = Math.max(...dataPointsValue);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.maps(\r\n                (datapoint) => (<ChartBar\r\n                    key={datapoint.label}\r\n                    value={datapoint.value}\r\n                    maxValue={totalValue}\r\n                    label={datapoint.label}></ChartBar>\r\n                )\r\n            )\r\n            }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Charts;"]},"metadata":{},"sourceType":"module"}