{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\my-app\\\\basic-react-project\\\\Project-8\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameIsTouched(true);\n\n    if (event.target.value.trim() !== '') {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameIsTouched(true);\n    console.log(enteredName);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n    }\n\n    setEnteredName('');\n  };\n\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameIsTouched;\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Should Not Be Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"wSi5sCjOyRraAG/dfA1wB69NG6Y=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["D:/Learning/React/my-app/basic-react-project/Project-8/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameIsTouched","setEnteredNameIsTouched","nameInputChangeHandler","event","target","value","nameInputBlurHandler","trim","formSubmissionHandler","preventDefault","console","log","nameInputIsInValid","nameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,oBAAD,EAAuBC,uBAAvB,IAAkDR,QAAQ,CAAC,KAAD,CAAhE;;AAEA,QAAMS,sBAAsB,GAAIC,KAAD,IAAW;AACxCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAKA,QAAMC,oBAAoB,GAAIH,KAAD,IAAW;AACtCF,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;;AAEA,QAAGE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBE,IAAnB,OAA8B,EAAjC,EACA;AACER,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GAPD;;AASA,QAAMS,qBAAqB,GAAIL,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACM,cAAN;AAEAR,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;;AAEA,QAAGA,WAAW,CAACW,IAAZ,OAAuB,EAA1B,EACA;AACER,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;;AAEDF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAbD;;AAeA,QAAMe,kBAAkB,GAAG,CAACd,kBAAD,IAAuBE,oBAAlD;AAEA,QAAMa,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEX,sBAHZ;AAIE,QAAA,MAAM,EAAEI,oBAJV;AAKE,QAAA,KAAK,EAAEV;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGgB,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxDD;;GAAMlB,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameIsTouched(true);\n\n    if(event.target.value.trim() !== '')\n    {\n      setEnteredNameIsValid(true);\n    }\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameIsTouched(true);\n\n    console.log(enteredName);\n\n    if(enteredName.trim() === '')\n    {\n      setEnteredNameIsValid(false);\n    }\n    \n    setEnteredName('');\n  };\n\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameIsTouched\n\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInValid && <p className=\"error-text\">Name Should Not Be Empty</p>}\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;"]},"metadata":{},"sourceType":"module"}