{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\my-app\\\\basic-react-project\\\\Project-8\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    console.log(enteredName);\n\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n    }\n\n    setEnteredName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Should Not Be Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"klFALE9ibFowH5ZO7ho8IPHlwZI=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["D:/Learning/React/my-app/basic-react-project/Project-8/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","console","log","trim"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,IAAD,CAA5D;;AAEA,QAAMO,sBAAsB,GAAIC,KAAD,IAAW;AACxCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAIH,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACI,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;;AAEA,QAAGA,WAAW,CAACY,IAAZ,OAAuB,EAA1B,EACA;AACET,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;;AAEDF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAXD;;AAaA,sBACE;AAAM,IAAA,QAAQ,EAAEO,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEJ,sBAHZ;AAIE,QAAA,KAAK,EAAEJ;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF,EAQG,CAACE,kBAAD,iBAAuB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAR1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtCD;;GAAMJ,W;;KAAAA,W;AAwCN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    console.log(enteredName);\n\n    if(enteredName.trim() === '')\n    {\n      setEnteredNameIsValid(false);\n    }\n    \n    setEnteredName('');\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n        {!enteredNameIsValid && <p className=\"error-text\">Name Should Not Be Empty</p>}\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;"]},"metadata":{},"sourceType":"module"}