{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\my-app\\\\basic-react-project\\\\Project-8\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState(''); //const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false); // const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameIsTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameIsTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameIsTouched(true);\n    console.log(enteredName);\n    console.log(enteredEmail);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameIsTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler // onBlur={nameInputBlurHandler}\n        ,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name Should Not Be Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"tUaKFtLVOc6fyClMmN0fYfIxNj0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["D:/Learning/React/my-app/basic-react-project/Project-8/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameIsTouched","setEnteredNameIsTouched","enteredNameIsValid","trim","nameInputIsInValid","formIsValid","nameInputChangeHandler","event","target","value","emailInputChangeHandler","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD,CAF6B,CAG7B;;AACA,QAAM,CAACO,oBAAD,EAAuBC,uBAAvB,IAAkDR,QAAQ,CAAC,KAAD,CAAhE,CAJ6B,CAK9B;;AAEC,QAAMS,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,OAAuB,EAAlD;AACA,QAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,oBAAlD;AAEA,MAAIK,WAAW,GAAG,KAAlB;;AAEA,MAAGH,kBAAH,EACA;AACEG,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxCV,IAAAA,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIH,KAAD,IAAW;AACzCR,IAAAA,eAAe,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAKA,QAAME,oBAAoB,GAAIJ,KAAD,IAAW;AACtCN,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,GAFD;;AAIA,QAAMW,qBAAqB,GAAIL,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACM,cAAN;AAEAZ,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AAEAa,IAAAA,OAAO,CAACC,GAAR,CAAYnB,WAAZ;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ;;AAEA,QAAG,CAACI,kBAAJ,EACA;AACE;AACD;;AAEDL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD,GAhBD;;AAoBA,QAAMe,gBAAgB,GAAGZ,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEI,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEV,sBAHZ;AAIE,QAAA,MAAM,EAAEK,oBAJV;AAKE,QAAA,KAAK,EAAEf;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,QAAQ,EAAEc,uBAHZ,CAIE;AAJF;AAKE,QAAA,KAAK,EAAEZ;AALT;AAAA;AAAA;AAAA;AAAA,cAVF,EAiBGM,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9ED;;GAAMX,W;;KAAAA,W;AAgFN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  //const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameIsTouched, setEnteredNameIsTouched] = useState(false);\n // const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameIsTouched;\n\n  let formIsValid = false;\n\n  if(enteredNameIsValid)\n  {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  }\n\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameIsTouched(true);\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameIsTouched(true);\n\n    console.log(enteredName);\n    console.log(enteredEmail);\n\n    if(!enteredNameIsValid)\n    {\n      return;\n    }\n    \n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameIsTouched(false);\n  };\n\n  \n\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        <label htmlFor='email'>Your Email</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailInputChangeHandler}\n          // onBlur={nameInputBlurHandler}\n          value={enteredEmail}\n        />\n        {nameInputIsInValid && <p className=\"error-text\">Name Should Not Be Empty</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;"]},"metadata":{},"sourceType":"module"}