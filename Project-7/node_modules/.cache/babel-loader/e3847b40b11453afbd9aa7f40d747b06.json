{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\React\\\\my-app\\\\basic-react-project\\\\Project-7\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport MoviesList from './components/MoviesList'; //import AddMovie from './components/AddMovie';\n\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]); // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  // const fetchMoviesHandler = useCallback(async () => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await axios.get('https://swapi.dev/api/films/');\n  //     if (!response.ok) {\n  //       throw new Error('Something went wrong!');\n  //     }\n  //     const data = await response.json();\n  //     const loadedMovies = [];\n  //     for (const key in data) {\n  //       loadedMovies.push({\n  //         id: key,\n  //         title: data[key].title,\n  //         openingText: data[key].openingText,\n  //         releaseDate: data[key].releaseDate,\n  //       });\n  //     }\n  //     setMovies(loadedMovies);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // }, [fetchMoviesHandler]);\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch('https://react-http-ac094-default-rtdb.firebaseio.com/movies.json', {\n  //     method: 'POST',\n  //     body: JSON.stringify(movie),\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   });\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  function fetchMoviesHandler() {\n    axios.get('https://swapi.dev/api/films/').then(response => {\n      return response;\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  } // let content = <p>Found no movies.</p>;\n  // if (movies.length > 0) {\n  //   content = <MoviesList movies={movies} />;\n  // }\n  // if (error) {\n  //   content = <p>{error}</p>;\n  // }\n  // if (isLoading) {\n  //   content = <p>Loading...</p>;\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Learning/React/my-app/basic-react-project/Project-7/src/App.js"],"names":["React","useState","useEffect","useCallback","axios","MoviesList","App","movies","setMovies","fetchMoviesHandler","get","then","response","data","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CACA;;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC,CADa,CAEb;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAASQ,kBAAT,GAA8B;AAC5BL,IAAAA,KAAK,CAACM,GAAN,CAAU,8BAAV,EACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAP;AACD,KAHH,EAIGD,IAJH,CAISE,IAAD,IAAU;AACd,YAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACxD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,SAAP;AAMD,OAPyB,CAA1B;AAQAhB,MAAAA,SAAS,CAACM,iBAAD,CAAT;AACD,KAdH;AAeD,GAjEY,CAmEb;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEL,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAS,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEF,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT,CAPF,CADF;AAWD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport MoviesList from './components/MoviesList';\n//import AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  // const fetchMoviesHandler = useCallback(async () => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await axios.get('https://swapi.dev/api/films/');\n  //     if (!response.ok) {\n  //       throw new Error('Something went wrong!');\n  //     }\n\n  //     const data = await response.json();\n\n  //     const loadedMovies = [];\n\n  //     for (const key in data) {\n  //       loadedMovies.push({\n  //         id: key,\n  //         title: data[key].title,\n  //         openingText: data[key].openingText,\n  //         releaseDate: data[key].releaseDate,\n  //       });\n  //     }\n\n  //     setMovies(loadedMovies);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // }, [fetchMoviesHandler]);\n\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch('https://react-http-ac094-default-rtdb.firebaseio.com/movies.json', {\n  //     method: 'POST',\n  //     body: JSON.stringify(movie),\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   });\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n  function fetchMoviesHandler() {\n    axios.get('https://swapi.dev/api/films/')\n      .then((response) => {\n        return response;\n      })\n      .then((data) => {\n        const transformedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          };\n        });\n        setMovies(transformedMovies);\n      });\n  }\n\n  // let content = <p>Found no movies.</p>;\n\n  // if (movies.length > 0) {\n  //   content = <MoviesList movies={movies} />;\n  // }\n\n  // if (error) {\n  //   content = <p>{error}</p>;\n  // }\n\n  // if (isLoading) {\n  //   content = <p>Loading...</p>;\n  // }\n\n  return (\n    <React.Fragment>\n      {/* <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section> */}\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section><MoviesList movies={movies} /></section>\n    </React.Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}